# ------------------------------------------------------
# THIS FILE WAS AUTOMATICALLY GENERATED (DO NOT MODIFY)
# ------------------------------------------------------

type Certificate {
  id: Int!
  name: String!
  code: String
  description: String
  created_at: DateTime!
  updated_at: DateTime!
  users: [User!]
}

"""
A date-time string at UTC, such as 2019-12-03T09:54:33Z, compliant with the date-time format.
"""
scalar DateTime

type UserPermission {
  id: Int!
  user_id: Int
  object: String!
  action: String!
  created_at: DateTime!
  updated_at: DateTime!
  user: User
}

type User {
  id: Int!
  certificate_id: Int
  first_name: String!
  last_name: String!
  email: String!
  phone: String
  password: String!
  email_verified_at: DateTime
  phone_verified_at: DateTime
  user_type: String!
  gender: String
  birthdate: DateTime
  max_facilities_count: Int!
  lang: String!
  about: String
  address: String
  image: String
  is_admin: Boolean!
  created_at: DateTime!
  updated_at: DateTime!
  certificate: Certificate
  permissions: [UserPermission!]
}

type PermissionItem {
  key: String
  label: String
}

type Permission {
  objectKey: String!
  objectName: String!
  objectLabel: String!
  permissionType: String!
  permissions: [PermissionItem!]!
}

type LoginResponse {
  access_token: String!
  user: User!
}

type Query {
  users: [User!]!
  user(id: Int!): User!
  certificates: [Certificate!]!
  certificate(id: Int!): Certificate!
  permissions: [Permission!]!
  userPermissions: [UserPermission!]!
  userPermission(id: Int!): UserPermission!
}

type Mutation {
  createUser(createUserInput: CreateUserInput!): User!
  updateUser(updateUserInput: UpdateUserInput!): User!
  updateUserPermissions(updateUserPermissionsInput: UpdateUserPermissionsInput!): [UserPermission!]!
  removeUser(id: Int!): User!
  createCertificate(createCertificateInput: CreateCertificateInput!): Certificate!
  updateCertificate(updateCertificateInput: UpdateCertificateInput!): Certificate!
  removeCertificate(id: Int!): Certificate!
  login(loginUserInput: LoginUserInput!): LoginResponse!
  register(registerUserInput: CreateUserInput!): User!
}

input CreateUserInput {
  certificate_id: Float
  first_name: String!
  last_name: String!
  email: String!
  phone: String
  password: String!
  password_confirmation: String!
}

input UpdateUserInput {
  certificate_id: Float
  first_name: String!
  last_name: String!
  email: String!
  phone: String
  password: String
  password_confirmation: String
  id: Float!
  user_type: String
  gender: String
  birthdate: String
  max_facilities_count: Float
  lang: String
  about: String
  address: String
}

input UpdateUserPermissionsInput {
  id: Int!
  permissions: [SinglePermission!]!
}

input SinglePermission {
  action: String!
  object: String
}

input CreateCertificateInput {
  name: String!
  code: String!
  description: String!
}

input UpdateCertificateInput {
  name: String!
  code: String!
  description: String!
  id: Float!
}

input LoginUserInput {
  email: String!
  password: String!
}